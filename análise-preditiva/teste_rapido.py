#!/usr/bin/env python3
"""
Teste R√°pido - Verifica se o sistema simplificado est√° funcionando
"""

from detector import CoffeeDiseaseDetector
import os

def teste_rapido():
    """Teste b√°sico do sistema"""
    print("üß™ TESTE R√ÅPIDO DO SISTEMA")
    print("=" * 40)
    
    # 1. Testa inicializa√ß√£o
    print("1Ô∏è‚É£ Inicializando detector...")
    try:
        detector = CoffeeDiseaseDetector()
        print("‚úÖ Detector inicializado com sucesso")
    except Exception as e:
        print(f"‚ùå Erro na inicializa√ß√£o: {e}")
        return False
    
    # 2. Testa carregamento do dataset
    print("\n2Ô∏è‚É£ Carregando dataset...")
    try:
        if detector.load_dataset():
            print("‚úÖ Dataset carregado com sucesso")
        else:
            print("‚ùå Falha ao carregar dataset")
            return False
    except Exception as e:
        print(f"‚ùå Erro ao carregar dataset: {e}")
        return False
    
    # 3. Testa carregamento do modelo
    print("\n3Ô∏è‚É£ Carregando modelo YOLO...")
    try:
        if detector.load_model():
            print("‚úÖ Modelo YOLO carregado com sucesso")
        else:
            print("‚ùå Falha ao carregar modelo")
            return False
    except Exception as e:
        print(f"‚ùå Erro ao carregar modelo: {e}")
        return False
    
    # 4. Testa an√°lise do dataset
    print("\n4Ô∏è‚É£ Analisando dataset...")
    try:
        detector.analyze_dataset()
        print("‚úÖ An√°lise do dataset conclu√≠da")
    except Exception as e:
        print(f"‚ùå Erro na an√°lise: {e}")
        return False
    
    # 5. Testa predi√ß√£o em uma imagem
    print("\n5Ô∏è‚É£ Testando predi√ß√£o...")
    try:
        # Procura uma imagem para testar
        images_dir = os.path.join(detector.dataset_path, 'images')
        if os.path.exists(images_dir):
            images = [f for f in os.listdir(images_dir) if f.endswith('.jpg')]
            if images:
                test_image = os.path.join(images_dir, images[0])
                print(f"üì∏ Testando com: {images[0]}")
                
                results = detector.predict_image(test_image)
                if results is not None:
                    print("‚úÖ Predi√ß√£o realizada com sucesso")
                    detector._print_detections(results)
                else:
                    print("‚ö†Ô∏è Predi√ß√£o retornou None (pode ser normal)")
            else:
                print("‚ö†Ô∏è Nenhuma imagem encontrada para teste")
        else:
            print("‚ö†Ô∏è Diret√≥rio de imagens n√£o encontrado")
    except Exception as e:
        print(f"‚ùå Erro na predi√ß√£o: {e}")
        return False
    
    print("\n" + "=" * 40)
    print("üéâ TESTE CONCLU√çDO COM SUCESSO!")
    print("=" * 40)
    print("‚úÖ Sistema funcionando perfeitamente")
    print("‚úÖ Pode executar: python main.py")
    return True

if __name__ == "__main__":
    try:
        teste_rapido()
    except Exception as e:
        print(f"\n‚ùå Erro inesperado no teste: {e}")
        print("Verifique se todas as depend√™ncias est√£o instaladas:")
        print("pip install -r requirements.txt")
